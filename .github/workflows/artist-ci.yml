name: Artist CI
on:
  push:
    branches:
      - "master"
env:
  MC_VERSION: "1.20.1"
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Set env
        run: |
          echo "workflow=$GITHUB_RUN_NUMBER" >> $GITHUB_ENV
          echo "ref=$GITHUB_REF_NAME" >> $GITHUB_ENV
      - name: Checkout Git Repository
        uses: actions/checkout@v3
      - name: Validate Gradle Wrapper
        uses: gradle/wrapper-validation-action@v1
      - name: Set up JDK
        uses: graalvm/setup-graalvm@v1
        with:
          version: "latest"
          java-version: 17
          github-token: "${{ secrets.GITHUB_TOKEN }}"
          cache: gradle
      - name: Configure Git
        run: |
          git config --global user.name "Artist CI"
          git config --global user.email "ci@plutomc.club"
          chmod u+x gradlew
      - name: Apply patches
        run: |
          ./gradlew -Dorg.gradle.jvmargs="-Dgraal.CompilerConfiguration=enterprise -Dgraal.UsePriorityInlining=true -Dgraal.Vectorization=true -Dgraal.OptDuplication=true --add-modules jdk.incubator.vector" applyPatches --stacktrace --no-daemon
      - name: Build a paperclip jar
        run: |
          ./gradlew -Dorg.gradle.jvmargs="-Dgraal.CompilerConfiguration=enterprise -Dgraal.UsePriorityInlining=true -Dgraal.Vectorization=true -Dgraal.OptDuplication=true --add-modules jdk.incubator.vector" createReobfPaperclipJar --stacktrace --no-daemon
      - name: Rename Jar
        run: "mv build/libs/artist-paperclip-${{ env.MC_VERSION }}-R0.1-SNAPSHOT-reobf.jar build/libs/artist-${{ env.MC_VERSION }}-${{ env.workflow }}.jar"
      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v3.1.2
        with:
          name: artist-1.20.1
          path: "build/libs/artist-${{ env.MC_VERSION }}-${{ env.workflow }}.jar"
      - name: Release Artifacts
        uses: marvinpinto/action-automatic-releases@latest
        with:
          title: "1.20.1 #${{ env.workflow }}"
          automatic_release_tag: "Artist-#${{ env.workflow }}"
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          files: "build/libs/artist-${{ env.MC_VERSION }}-${{ env.workflow }}.jar"
          prerelease: false
      - name: Build & Publish API
        run: |
          echo "GITHUB_USERNAME=Artist" >> $GITHUB_ENV
          export GITHUB_USERNAME=Artist
          echo "GITHUB_TOKEN=${{ secrets.GITHUB_TOKEN }}" >> $GITHUB_ENV
          export GITHUB_TOKEN=${{ secrets.GITHUB_TOKEN }}
          ./gradlew -Dorg.gradle.jvmargs="-DnostalRepoUsername=${{ secrets.NOSTAL_REPO_USERNAME }} -DnostalRepoPassword=${{ secrets.NOSTAL_REPO_PASSWORD }}" publish

